12/6/24

*typescript : it is superset of js
              it is compile language
              it is strict type language

*software pre-request
1.node-js
    cmd-> node -v     //it will show node version
          npm -v      // it will display npm version

2.typescript
    install : npm i typescript -g     // it will install type script
     cmd-> tsc -v or npx tsc -v        // it will display ts version

*We can create typescript file by writing fileName.ts
*How to execute typescript file.

step 1: tsc fileName.ts                // it will compile ts file and generate plain js file.
step 2: node fileName.js               // it will execute js file

*how to create variable in ts

syntax : let variableName:datatype;

*datatypein typescript

*write a function with there parametr fname,mname and lname and display function


*oops

1.class : it is collection of data menmber and member function
          it is a template which we can reuse 
          to create a class we use class keyword
          class name must start with capital letter

          syntax: class Classname{
            data-member and member function
          }
this keyword : it represent current or current object

2.object : it is instance of class
           by using object we can access class data-member and member-function outside class

           syntax: let ObjName=new Classname();

    - constructor : it is special member function of class
                    constructor execute automatically when class object is created or initialized
                    constructor name must be only constructor in ts            

3.inheritance : accessing parent class property into child class
                to perform inheritance inbetween two class we use "extends" keyword

                syntax: class childClassName extends parentClassName

             -super() keyword : it represent parent class constructor in child class


4.encapsulation : wrapping of data into single unit

5.abstraction : hidding implementation and showing only functionality
                we can achieve by using interface and abstraction method, static keyword

        access specifier: public : we can access class properties inside class and outside class and in child class also
                          protected : we can access class properties inside same class and in child class also but not outside class
                          private : we can access class properties within same class
                                 

6.polymorphism : ability to take more than one form 
                 - method overloading - in this when we have multiple method with same name in same class 
                 - method overridding - in this when we have multiple method with same name in different classes


*module & types : it can be single or multiple ts file ,containing code with specific purpose
                  that data or code we can access in another file by exporting and importing
                  we use export keyword to send data from file
                  we use import keyword to access data

*interface : it is signature of class 
             it contain abstract method in it
             we create interface by using interface keyword
             its child class has the responsibility to implement interface
             to perform inheritance in between class and interface we use "implements" keyword



















